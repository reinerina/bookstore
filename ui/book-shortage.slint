import { VerticalBox, Button, ListView, HorizontalBox } from "std-widgets.slint";

export struct ShortageOrder {
    id: int,
    registeration_date: string,
    is_resolved: bool,
}

component ShortageHistoryItem inherits Rectangle {
    in property <ShortageOrder> order;
    in property <length> item-width;

    callback view-order(int);
    callback delete-order(int);
    callback create-purchase-order(int);

    width: root.item-width;
    callback clicked <=> touch.clicked;

    states [
        pressed when touch.pressed: {
            state.opacity: 0.6;
        }
        hover when touch.has-hover: {
            state.opacity: 0.4;
        }
    ]

    VerticalLayout {
        alignment: LayoutAlignment.start;
        width: root.item-width;
        Rectangle {
            touch := TouchArea {
                width: 100%;
                height: 100%;
            }

            state := Rectangle {
                opacity: 0;
                background: Colors.gray;

                animate opacity { duration: 150ms; }
            }

            VerticalBox {
                alignment: LayoutAlignment.start;
                Text {
                    text: "Id: " + root.order.id;
                }

                Text {
                    text: "Registeration date: " + root.order.registeration_date;
                }

                Text {
                    text: "Is resolved: " + (root.order.is_resolved ? "Yes" : "No");
                }
            }
        }

        HorizontalLayout {
            alignment: LayoutAlignment.end;
            padding-top: 8px;
            padding-bottom: 8px;
            Button {
                text: "View";
                clicked => {
                    root.view-order(root.order.id);
                }
            }

            Button {
                text: "Delete Or Cancel";
                clicked => {
                    root.delete-order(root.order.id);
                }
            }

            Button {
                text: "Create Purchase Order";
                clicked => {
                    root.create-purchase-order(root.order.id);
                }
            }
        }
    }
}

export component ShortageHistory inherits Window {
    in property <length> item-width: 300px;
    in property <[ShortageOrder]> orders;
    in property <length> window-width: 800px;
    in property <length> window-height: 600px;

    callback open-shortage-detail(int);
    callback view-order(int);
    callback delete-order(int);
    callback create-purchase-order(int);

    VerticalBox {
        alignment: LayoutAlignment.start;
        ListView {
            preferred-height: root.window-height;
            for order[index] in root.orders: ShortageHistoryItem {
                order: order;
                item-width: root.item-width;
                view-order => {
                    root.view-order(order.id);
                }
                delete-order => {
                    root.delete-order(order.id);
                }
                create-purchase-order => {
                    root.create-purchase-order(order.id);
                }

                clicked => {
                    root.open-shortage-detail(order.id);
                }
            }
        }
    }
}
